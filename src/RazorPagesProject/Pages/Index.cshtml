@page
@model IndexModel
@{
    ViewData["Title"] = "Message System";
}

<h1>@ViewData["Title"]</h1>

<input id="quote" type="hidden" value="@Model.Quote">

<form id="addMessage" method="post">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Add a message</h3>
        </div>
        <div class="card-body">
            <div class="form-group">
                <label asp-for="Message.Text"></label>
                <input id="newMessage" asp-for="Message.Text" class="form-control" style="width:100%" maxlength="512">
                <div class="d-flex justify-content-between">
                    <span asp-validation-for="Message.Text" class="text-danger"></span>
                    <small id="characterCount" class="form-text text-muted">0/512 characters</small>
                </div>
            </div>
            <div class="form-group">
                <button id="addMessageBtn" type="submit" asp-page-handler="AddMessage" class="btn btn-primary mt-3">Add Message</button>
            </div>
        </div>
    </div>
</form>

<form id="messages" method="post">
    <div class="card mt-3">
        <div class="card-header">
            <button id="deleteAllBtn" type="submit" asp-page-handler="DeleteAllMessages" class="pull-right btn btn-danger">Clear All</button>
            <h3 class="card-title" style="line-height:2.1">Messages</h3>
        </div>
        <div class="card-body">
            <ul>
                @if (Model.Messages is not null)
                {
                    @foreach (var message in Model.Messages)
                    {
                        <li style="line-height:2.5">
                            <button id="deleteBtn@(message.Id)" type="submit" class="btn btn-danger" style="margin-bottom:2px" asp-page-handler="DeleteMessage" asp-route-id="@message.Id">Delete</button>
							<span class="message-list">@message.Text</span>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
</form>

<form id="analyze" method="post">
    <div class="card mt-3">
        <div class="card-header">
            <h3 class="card-title">Analyze Messages</h3>
        </div>
        <div class="card-body">
            <div class="form-group">
                <button id="analyzeBtn" type="submit" asp-page-handler="AnalyzeMessages" class="btn btn-primary">Analyze</button>
            </div>
            <div class="form-group">
                @Model.MessageAnalysisResult
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const messageInput = document.getElementById('newMessage');
            const characterCount = document.getElementById('characterCount');
            const maxLength = 512;
            
            function updateCharacterCount() {
                const currentLength = messageInput.value.length;
                characterCount.textContent = `${currentLength}/${maxLength} characters`;
                
                // Change color as user approaches the limit
                if (currentLength > maxLength * 0.9) {
                    characterCount.className = 'form-text text-warning';
                } else if (currentLength === maxLength) {
                    characterCount.className = 'form-text text-danger';
                } else {
                    characterCount.className = 'form-text text-muted';
                }
            }
            
            // Update counter on input
            messageInput.addEventListener('input', updateCharacterCount);
            
            // Update counter on page load if there's existing content
            updateCharacterCount();
        });
    </script>
}
