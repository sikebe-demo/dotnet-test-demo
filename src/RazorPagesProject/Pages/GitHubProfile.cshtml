@page "{userName?}"
@model GitHubProfileModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["PageTitle"];
}

<h1 class="page-title">
    <i class="fab fa-github me-2"></i>@Localizer["PageHeader"]
</h1>

<div class="row">
    <div class="col-md-6 mb-4">
        <div class="profile-card">
            <div class="github-header">
                <h3><i class="fas fa-search me-2"></i>@Localizer["SearchHeader"]</h3>
            </div>
            <div class="profile-info">
                <form id="user-profile" method="post">
                    <div asp-validation-summary="None" class="text-danger"></div>
                    <div class="form-group mb-3">
                        <label asp-for="Input.UserName" class="profile-label mb-1">@Localizer["UserNameLabel"]</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fab fa-github"></i></span>
                            <input asp-for="Input.UserName" class="form-control" placeholder="@Localizer["UserNamePlaceholder"]" />
                        </div>
                        <span asp-validation-for="Input.UserName" class="text-danger"></span>
                    </div>
                    <div class="form-group text-center">
                        <button type="submit" class="btn btn-primary search-btn mt-3">
                            <i class="fas fa-search me-2"></i>@Localizer["SearchButton"]
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @if (Model.GitHubUser != null)
    {
        <div class="col-md-6">
            <div class="profile-card profile-display">
                <div class="github-header">
                    <h3><i class="fas fa-user me-2"></i>@Localizer["ProfileHeader"]</h3>
                </div>
                <div class="avatar-container">
                    @if (!string.IsNullOrEmpty(Model.GitHubUser.AvatarUrl))
                    {
                        <img src="@Model.GitHubUser.AvatarUrl" alt="@Model.GitHubUser.Login" class="avatar" />
                    }
                    else
                    {
                        <div class="avatar d-flex align-items-center justify-content-center bg-light">
                            <i class="fas fa-user fa-3x text-secondary"></i>
                        </div>
                    }
                </div>
                <div class="profile-info">
                    <div class="profile-item">
                        <i class="fas fa-at"></i>
                        <div>
                            <div class="profile-label">@Localizer["LoginLabel"]</div>
                            <div id="user-login" class="profile-value">@Model.GitHubUser.Login</div>
                        </div>
                    </div>
                    <div class="profile-item">
                        <i class="fas fa-id-card"></i>
                        <div>
                            <div class="profile-label">@Localizer["NameLabel"]</div>
                            <div id="name" class="profile-value">@(string.IsNullOrEmpty(Model.GitHubUser.Name) ? Localizer["NotSet"] : Model.GitHubUser.Name)</div>
                        </div>
                    </div>
                    <div class="profile-item">
                        <i class="fas fa-building"></i>
                        <div>
                            <div class="profile-label">@Localizer["CompanyLabel"]</div>
                            <div id="company" class="profile-value">@(string.IsNullOrEmpty(Model.GitHubUser.Company) ? Localizer["NotSet"] : Model.GitHubUser.Company)</div>
                        </div>
                    </div>
                    <div class="text-center mt-4">
                        <a href="https://github.com/@Model.GitHubUser.Login" target="_blank" class="btn btn-outline-dark">
                            <i class="fab fa-github me-2"></i>@Localizer["ViewOnGitHub"]
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function() {
            const form = document.getElementById('user-profile');
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalBtnText = '<i class="fas fa-search me-2"></i>@Localizer["SearchButton"]';
            const loadingBtnText = '<i class="fas fa-spinner fa-spin me-2"></i>@Localizer["LoadingText"]';

            // ボタンを元の状態にリセットする関数
            function resetButton() {
                submitBtn.innerHTML = originalBtnText;
                submitBtn.disabled = false;
            }

            // フォーム送信時の処理
            form.addEventListener('submit', function() {
                // バリデーションチェック（jQuery Validation優先、フォールバックでHTML5）
                const isValid = (typeof $ !== 'undefined' && $.fn.valid)
                    ? $(form).valid()
                    : form.checkValidity();

                if (!isValid) {
                    return false; // バリデーションエラー時は送信中止
                }

                // バリデーション成功時はLoading状態に変更
                submitBtn.innerHTML = loadingBtnText;
                submitBtn.disabled = true;

                // タイムアウト対策（5秒後にリセット）
                setTimeout(resetButton, 5000);
                return true;
            });

            // ページロード時とバリデーションエラー時のボタンリセット
            document.addEventListener('DOMContentLoaded', function() {
                resetButton();

                // jQuery Validationエラー時のリセット
                if (typeof $ !== 'undefined') {
                    $(form).on('invalid-form.validate', resetButton);
                }
            });

            // ページが再表示された時のリセット
            document.addEventListener('visibilitychange', function() {
                if (!document.hidden && submitBtn.disabled) {
                    resetButton();
                }
            });
        })();
    </script>
}
