name: CI

permissions:
  contents: read
  pull-requests: read

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version-file: '.node-version'

    - name: Install npm dependencies for client-side libraries
      working-directory: ./src/RazorPagesProject
      run: npm install

    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        global-json-file: global.json

    - name: Setup Japanese Font Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          fonts-noto-cjk \
          fonts-noto-cjk-extra \
          fonts-liberation \
          fonts-dejavu-core \
          fontconfig
        # フォントキャッシュを更新
        sudo fc-cache -fv
        # 利用可能な日本語フォントを確認
        fc-list :lang=ja | head -10

    - name: Build
      run: dotnet build

    - name: Run unit tests and generate coverage report
      working-directory: ./src/PrimeService.Tests
      run: dotnet test --collect:"XPlat Code Coverage" --no-build

    - name: Run integrations tests
      working-directory: ./src/RazorPagesProject.IntegrationTests
      run: dotnet test --no-build

    - name: Run web app and E2E tests
      env:
        CI: true
      run: |
        dotnet run --project ./src/RazorPagesProject/RazorPagesProject.csproj --no-build &
        dotnet test ./src/RazorPagesProject.E2ETests

    - name: Upload logs
      uses: actions/upload-artifact@v5
      if: failure()
      with:
        name: logs
        path: src/RazorPagesProject.E2ETests/bin/Debug/net9.0/logs

  copilot-review:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.COPILOT_PAT }}
    steps:
    - uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version-file: '.node-version'

    - name: Install GitHub Copilot CLI
      run: npm install -g @github/copilot

    - name: Configure Copilot CLI trusted folder
      run: |
        CONFIG_DIR="$HOME/.copilot"
        CONFIG_FILE="$CONFIG_DIR/config.json"
        WORKSPACE_PATH="${{ github.workspace }}"

        mkdir -p "$CONFIG_DIR"

        if [ -f "$CONFIG_FILE" ]; then
          tmp_file="$(mktemp)"
          jq --arg dir "$WORKSPACE_PATH" '
            .trusted_folders = (.trusted_folders // []) |
            if (.trusted_folders | index($dir)) == null then
              .trusted_folders += [$dir]
            else
              .
            end
          ' "$CONFIG_FILE" > "$tmp_file"
          mv "$tmp_file" "$CONFIG_FILE"
        else
          printf '{\n  "trusted_folders": [\n    "%s"\n  ]\n}\n' "$WORKSPACE_PATH" > "$CONFIG_FILE"
        fi

    - name: Run GitHub Copilot CLI review
      run: |
        REVIEW_URL="https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"
        copilot -p "Check the changes made in PR ${REVIEW_URL}. Identify critical bugs, test gaps, and security concerns. Summarize your findings with sections for Summary, Risks, and Suggested Actions. Always Respond in Japanese." > copilot-review.md

        echo "### GitHub Copilot CLI Review" >> "$GITHUB_STEP_SUMMARY"
        if [ -s copilot-review.md ]; then
          cat copilot-review.md >> "$GITHUB_STEP_SUMMARY"
        else
          echo "No review output was produced." >> "$GITHUB_STEP_SUMMARY"
        fi
